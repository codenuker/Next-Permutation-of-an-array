#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void nextPermutation(vector<int>& nums) {
    int n = nums.size();
    int idx = -1;
    // finding pivot
    for (int i = n - 2; i >= 0; i--) {
        if (nums[i] < nums[i + 1]) {
            idx = i;
            break;
        }  
    }
    if (idx == -1) {
        reverse(nums.begin(), nums.end());
        for (int i = 0; i < n; i++) {
        cout << nums[i] << " ";
    }
        return;  // No next permutation available
    }
    // sorting/reversing after pivot
    reverse(nums.begin() + idx + 1, nums.end());
    // finding the just greater number than idx
    int j = -1;
    for (int i = idx + 1; i < n; i++) {
        if (nums[i] > nums[idx]) {
            j = i;
            break;
        }   
    }
    // swapping idx and j
    int temp;
    temp = nums[idx];
    nums[idx] = nums[j];
    nums[j] = temp;
        
    for (int i = 0; i < n; i++) {
        cout << nums[i] << " ";
    }
    cout << endl;
}

int main() {
    vector<int> v;
    v.push_back(3);
    v.push_back(2);
    v.push_back(1);
    nextPermutation(v);	

    return 0;
}
